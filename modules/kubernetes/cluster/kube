#!/usr/bin/env bash


_install_and_setup_docker()
{
  yum install -y yum-utils device-mapper-persistent-data lvm2
  yum-config-manager --add-repo "$AZCLOUD_APPS_KUBE_DOCKER_REPO"
  yum -y install docker
  systemctl enable --now docker
}


install_and_setup_kube()
{
  _install_and_setup_docker

  cat <<EOF > /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
enabled=1
gpgcheck=1
repo_gpgcheck=1
gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
EOF
  yum install -y kubelet kubeadm kubectl --enablerepo=kubernetes

  local existing_arg
  existing_arg="$(sed 's@KUBELET_EXTRA_ARGS=@@; s@"@@g' /etc/sysconfig/kubelet)"

  extra_args=("KUBELET_EXTRA_ARGS=\"")
  extra_args+=("${existing_arg}")
  extra_args+=("--runtime-cgroups=/systemd/system.slice")
  extra_args+=("--kubelet-cgroups=/systemd/system.slice")
  extra_args+=("\"")
  sed -i "s@KUBELET_EXTRA_ARGS=.*@${extra_args[*]}@g" /etc/sysconfig/kubelet

  systemctl enable --now kubelet

  # sysctl tuning
  cat <<EOF > /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF
  sysctl --system

  # disable swap
  sed -i '/swap/d' /etc/fstab
  swapoff -a
}

setup_kube_master_node()
{
  unset_proxy
  kubeadm init --pod-network-cidr="$AZCLOUD_APPS_KUBE_NET"
  
  mkdir -p ~/.kube
  cp -i /etc/kubernetes/admin.conf ~/.kube/config

  # apply kube network
  export KUBECONFIG=$KUBECONFIG:~/.kube/config
  kubectl apply -f "$AZCLOUD_APPS_KUBE_NET_URL"

  local time_to_wait; time_to_wait=120
  local counter; counter=0
  while true; do
    if kubectl get nodes | grep master | grep -qw Ready; then
      break
    fi

    if [ "$counter" -gt "$time_to_wait" ]; then
      echo "Wait time $time_to_wait exceeded"
      exit 1
    fi
  
    sleep 5
    ((counter++))
    continue
  done
 
  # join nodes to cluster
  local join_command
  join_command="$(kubeadm token create --print-join-command 2>/dev/null)"

  nodes=()
  while IFS='' read -r line; do nodes+=("$line"); done < <(get_play_nodes)
  
  for node in "${nodes[@]}"; do
    if [ "$node" == "$(hostname -s)" ]; then
      continue
    fi
    run_on_node "$node" "tmux new-session -d \
      'until [ \$(command -v kubeadm) ] || [ \$((++_c)) -gt 120 ]; do sleep 5; done;
       ${join_command}'"
  done
  
  until [ ${#nodes[*]} -eq "$(_get_cluster_size)" ] || [ $((++_c)) -gt 120 ]; do sleep 5; done
  cat <<EOF
+-------------------------------------+
  Cluster setup finished!
  Cluster name: $(get_play_id)
  Cluster nodes: $(_get_cluster_size)
  Date: $(date)
+-------------------------------------+
EOF
}

setup_kube_worker_node()
{
  :
}
