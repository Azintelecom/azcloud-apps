#!/usr/bin/env bash

_get_master_address()
{
  node_to_address "$(get_first_node)"
}

_get_slave_address()
{
  node_to_address "$(for a in $(get_play_nodes); do echo "$a"; done | sort -V | sed -n 2p)"
}

_am_i_kube_master_node()
{
  master_address="$(_get_master_address)"
  local my_address; my_address="$(get_my_address)"
  local exitcode; exitcode=1

  if [ "$my_address" == "$master_address" ]; then
    exitcode=0
  fi
  return ${exitcode}
}

_get_join_cert_digest()
{
  openssl x509 -pubkey -in "$AZCLOUD_APPS_KUBE_CA_CRT" \
    | openssl rsa -pubin -outform der 2>/dev/null \
    | openssl dgst -sha256 -hex \
    | sed 's/^.* //'
}

_get_join_token()
{
  kubeadm token list \
    | awk '{print $1}' \
    | tail -n1
}

_get_join_command()
{
  kubeadm token create --print-join-command 2>/dev/null
}

_get_cluster_size()
{
  kubectl get nodes | grep -wo Ready | wc -l
}

_detailed_version_of()
{
  local what; what="$1"; shift
  local what_version; what_version="$1"; shift
  local what_repo; what_repo="$1"

  # here we replace --enablerepo
  # with --color, because of '' when
  # ${enable_repo[@]} is empty
  enable_repo=()
  if [ -n "$what_repo" ]; then
    enable_repo=("--enablerepo=$what_repo")
  else
    enable_repo=("--color=never")
  fi

  local detailed_version
  detailed_version="$(
    yum -y \
      --showduplicates \
      "${enable_repo[@]}" \
      list "$what" \
      | grep ^"${what}" \
      | awk '{print $2}' \
      | cut -d: -f2 \
      | grep ^"${what_version}" \
      | sort -V \
      | tail -1)"
  [ -z "$detailed_version" ] && fatal "Could not get detailed version of $what"
  echo "$detailed_version"
}

_detailed_kube_version()
{
  local kube_version
  kube_version="$(_detailed_version_of kubeadm "1.${AZCLOUD_APPS_KUBE_VERSION}" kubernetes)"
  echo "$kube_version"
}

_detailed_docker_version()
{
  local docker_version
  docker_version="$(_detailed_version_of docker-ce "${AZCLOUD_APPS_KUBE_DOCKER_VERSION}" docker-ce-stable)"
  echo "$docker_version"
}

_detailed_containerd_version()
{ 
  local containerd_version; 
  containerd_version="$(_detailed_version_of containerd.io "$AZCLOUD_APPS_KUBE_CONTAINERD_VERSION")"
  echo "$containerd_version"
}
